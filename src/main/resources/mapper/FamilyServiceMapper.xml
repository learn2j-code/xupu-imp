<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dlm.imp.mapper.FamilyServiceMapper" >
  <resultMap id="BaseResultMap" type="com.dlm.imp.pojo.FamilyService" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="service_id" property="serviceId" jdbcType="INTEGER" />
    <result column="service_no" property="serviceNo" jdbcType="VARCHAR" />
    <result column="service_code" property="serviceCode" jdbcType="VARCHAR" />
    <result column="service_name" property="serviceName" jdbcType="VARCHAR" />
    <result column="service_intro" property="serviceIntro" jdbcType="VARCHAR" />
    <result column="conf_type" property="confType" jdbcType="VARCHAR" />
    <result column="conf_framework" property="confFramework" jdbcType="VARCHAR" />
    <result column="conf_content" property="confContent" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="bought_time" property="boughtTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="end_type" property="endType" jdbcType="INTEGER" />
    <result column="bought_num" property="boughtNum" jdbcType="INTEGER" />
    <result column="discount" property="discount" jdbcType="VARCHAR" />
    <result column="service_fee" property="serviceFee" jdbcType="VARCHAR" />
    <result column="family_id" property="familyId" jdbcType="INTEGER" />
    <result column="enable_flag" property="enableFlag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, service_id, service_no, service_code, service_name, service_intro, conf_type, 
    conf_framework, conf_content, price, bought_time, end_time, end_type, bought_num, 
    discount, service_fee, family_id, enable_flag, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dlm.imp.pojo.FamilyServiceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from family_service
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from family_service
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from family_service
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dlm.imp.pojo.FamilyService" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into family_service (service_id, service_no, service_code, 
      service_name, service_intro, conf_type, 
      conf_framework, conf_content, price, 
      bought_time, end_time, end_type, 
      bought_num, discount, service_fee, 
      family_id, enable_flag, create_time, 
      update_time)
    values (#{serviceId,jdbcType=INTEGER}, #{serviceNo,jdbcType=VARCHAR}, #{serviceCode,jdbcType=VARCHAR}, 
      #{serviceName,jdbcType=VARCHAR}, #{serviceIntro,jdbcType=VARCHAR}, #{confType,jdbcType=VARCHAR}, 
      #{confFramework,jdbcType=VARCHAR}, #{confContent,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, 
      #{boughtTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{endType,jdbcType=INTEGER}, 
      #{boughtNum,jdbcType=INTEGER}, #{discount,jdbcType=VARCHAR}, #{serviceFee,jdbcType=VARCHAR}, 
      #{familyId,jdbcType=INTEGER}, #{enableFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dlm.imp.pojo.FamilyService" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into family_service
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="serviceNo != null" >
        service_no,
      </if>
      <if test="serviceCode != null" >
        service_code,
      </if>
      <if test="serviceName != null" >
        service_name,
      </if>
      <if test="serviceIntro != null" >
        service_intro,
      </if>
      <if test="confType != null" >
        conf_type,
      </if>
      <if test="confFramework != null" >
        conf_framework,
      </if>
      <if test="confContent != null" >
        conf_content,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="boughtTime != null" >
        bought_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="endType != null" >
        end_type,
      </if>
      <if test="boughtNum != null" >
        bought_num,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="serviceFee != null" >
        service_fee,
      </if>
      <if test="familyId != null" >
        family_id,
      </if>
      <if test="enableFlag != null" >
        enable_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serviceId != null" >
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceNo != null" >
        #{serviceNo,jdbcType=VARCHAR},
      </if>
      <if test="serviceCode != null" >
        #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null" >
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceIntro != null" >
        #{serviceIntro,jdbcType=VARCHAR},
      </if>
      <if test="confType != null" >
        #{confType,jdbcType=VARCHAR},
      </if>
      <if test="confFramework != null" >
        #{confFramework,jdbcType=VARCHAR},
      </if>
      <if test="confContent != null" >
        #{confContent,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="boughtTime != null" >
        #{boughtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endType != null" >
        #{endType,jdbcType=INTEGER},
      </if>
      <if test="boughtNum != null" >
        #{boughtNum,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=VARCHAR},
      </if>
      <if test="serviceFee != null" >
        #{serviceFee,jdbcType=VARCHAR},
      </if>
      <if test="familyId != null" >
        #{familyId,jdbcType=INTEGER},
      </if>
      <if test="enableFlag != null" >
        #{enableFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dlm.imp.pojo.FamilyServiceExample" resultType="java.lang.Integer" >
    select count(*) from family_service
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlm.imp.pojo.FamilyService" >
    update family_service
    <set >
      <if test="serviceId != null" >
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceNo != null" >
        service_no = #{serviceNo,jdbcType=VARCHAR},
      </if>
      <if test="serviceCode != null" >
        service_code = #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null" >
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceIntro != null" >
        service_intro = #{serviceIntro,jdbcType=VARCHAR},
      </if>
      <if test="confType != null" >
        conf_type = #{confType,jdbcType=VARCHAR},
      </if>
      <if test="confFramework != null" >
        conf_framework = #{confFramework,jdbcType=VARCHAR},
      </if>
      <if test="confContent != null" >
        conf_content = #{confContent,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="boughtTime != null" >
        bought_time = #{boughtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endType != null" >
        end_type = #{endType,jdbcType=INTEGER},
      </if>
      <if test="boughtNum != null" >
        bought_num = #{boughtNum,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=VARCHAR},
      </if>
      <if test="serviceFee != null" >
        service_fee = #{serviceFee,jdbcType=VARCHAR},
      </if>
      <if test="familyId != null" >
        family_id = #{familyId,jdbcType=INTEGER},
      </if>
      <if test="enableFlag != null" >
        enable_flag = #{enableFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlm.imp.pojo.FamilyService" >
    update family_service
    set service_id = #{serviceId,jdbcType=INTEGER},
      service_no = #{serviceNo,jdbcType=VARCHAR},
      service_code = #{serviceCode,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      service_intro = #{serviceIntro,jdbcType=VARCHAR},
      conf_type = #{confType,jdbcType=VARCHAR},
      conf_framework = #{confFramework,jdbcType=VARCHAR},
      conf_content = #{confContent,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      bought_time = #{boughtTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      end_type = #{endType,jdbcType=INTEGER},
      bought_num = #{boughtNum,jdbcType=INTEGER},
      discount = #{discount,jdbcType=VARCHAR},
      service_fee = #{serviceFee,jdbcType=VARCHAR},
      family_id = #{familyId,jdbcType=INTEGER},
      enable_flag = #{enableFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>